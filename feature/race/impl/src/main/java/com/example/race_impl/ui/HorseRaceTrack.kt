package com.example.race_impl.ui

import androidx.compose.animation.core.*
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.Icon
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Text
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.graphicsLayer
import androidx.compose.ui.layout.onSizeChanged
import androidx.compose.ui.platform.LocalDensity
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.utils.R as UtilsR

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–Ω–æ–π –±–µ–≥–æ–≤–æ–π –¥–æ—Ä–æ–∂–∫–∏ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ª–æ—à–∞–¥—å—é
 * 
 * @param horseName –ò–º—è –ª–æ—à–∞–¥–∏, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ —Å–ª–µ–≤–∞ –æ—Ç –¥–æ—Ä–æ–∂–∫–∏
 * @param progress –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–≤–∏–∂–µ–Ω–∏—è –ª–æ—à–∞–¥–∏ –æ—Ç 0f –¥–æ 1f
 * @param finishPosition –ü–æ–∑–∏—Ü–∏—è –ª–æ—à–∞–¥–∏ –Ω–∞ —Ñ–∏–Ω–∏—à–µ (null –µ—Å–ª–∏ –≥–æ–Ω–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞)
 */
@Composable
internal fun HorseRaceTrack(
    horseName: String,
    progress: Float,
    finishPosition: Int? = null
) {
    // –°–æ–∑–¥–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏–π –ª–æ—à–∞–¥–∏
    val infiniteTransition = rememberInfiniteTransition(label = "horse_animation")
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —à–∏—Ä–∏–Ω—É –¥–æ—Ä–æ–∂–∫–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –¥–≤–∏–∂–µ–Ω–∏—è
    var trackWidth by remember { mutableStateOf(0) }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ dp –≤ –ø–∏–∫—Å–µ–ª–∏
    val density = LocalDensity.current
    
    // –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–∞—á–∏–≤–∞–Ω–∏—è –ª–æ—à–∞–¥–∏
    // –õ–æ—à–∞–¥—å –¥–≤–∏–≥–∞–µ—Ç—Å—è –≤–≤–µ—Ä—Ö-–≤–Ω–∏–∑ –Ω–∞ 5 –ø–∏–∫—Å–µ–ª–µ–π –≤ –∫–∞–∂–¥—É—é —Å—Ç–æ—Ä–æ–Ω—É
    val bounceAnimation by infiniteTransition.animateFloat(
        initialValue = -5f,
        targetValue = 5f,
        animationSpec = infiniteRepeatable(
            animation = tween(
                durationMillis = 1000,  // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
                easing = FastOutSlowInEasing  // –ü–ª–∞–≤–Ω–æ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ
            ),
            repeatMode = RepeatMode.Reverse  // –ê–Ω–∏–º–∞—Ü–∏—è –∏–¥–µ—Ç —Ç—É–¥–∞-–æ–±—Ä–∞—Ç–Ω–æ
        ),
        label = "bounce"
    )

    // –°–æ–∑–¥–∞–µ–º –ø–ª–∞–≤–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –ª–æ—à–∞–¥–∏
    // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ progress –ª–æ—à–∞–¥—å –ø–ª–∞–≤–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –≤ –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
    val animatedProgress by animateFloatAsState(
        targetValue = progress,
        animationSpec = tween(
            durationMillis = 300,  // –í—Ä–µ–º—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –¥–æ –Ω–æ–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏
            easing = LinearEasing  // –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
        ),
        label = "progress"
    )

    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–æ—Ä–æ–∂–∫–∏
    Column(
        modifier = Modifier
            .fillMaxWidth()
            .padding(vertical = 8.dp)
    ) {
        // –í–µ—Ä—Ö–Ω—è—è —Å—Ç—Ä–æ–∫–∞ —Å –∏–º–µ–Ω–µ–º –ª–æ—à–∞–¥–∏ –∏ –ø–æ–∑–∏—Ü–∏–µ–π –Ω–∞ —Ñ–∏–Ω–∏—à–µ
        Row(
            modifier = Modifier.fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceBetween,
            verticalAlignment = Alignment.CenterVertically
        ) {
            // –ò–º—è –ª–æ—à–∞–¥–∏
            Text(
                text = horseName,
                fontSize = 16.sp,
                fontWeight = FontWeight.Medium
            )
            
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –º–µ–¥–∞–ª—å –∏ –º–µ—Å—Ç–æ, –µ—Å–ª–∏ –ª–æ—à–∞–¥—å —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–ª–∞
            if (finishPosition != null) {
                Text(
                    text = when(finishPosition) {
                        1 -> "ü•á 1-–µ –º–µ—Å—Ç–æ"
                        2 -> "ü•à 2-–µ –º–µ—Å—Ç–æ"
                        3 -> "ü•â 3-–µ –º–µ—Å—Ç–æ"
                        else -> "$finishPosition-–µ –º–µ—Å—Ç–æ"
                    },
                    color = MaterialTheme.colorScheme.primary,
                    fontWeight = FontWeight.Bold,
                    fontSize = 14.sp
                )
            }
        }

        Spacer(modifier = Modifier.height(4.dp))

        // –ë–µ–≥–æ–≤–∞—è –¥–æ—Ä–æ–∂–∫–∞ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ª–æ—à–∞–¥—å—é
        Box(
            modifier = Modifier
                .fillMaxWidth()
                .height(36.dp)
                .onSizeChanged { trackWidth = it.width }  // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —à–∏—Ä–∏–Ω—É –¥–æ—Ä–æ–∂–∫–∏
                .clip(RoundedCornerShape(12.dp))  // –°–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
                .background(Color.White)  // –ë–µ–ª—ã–π —Ñ–æ–Ω
        ) {
            // –ö—Ä–∞—Å–Ω–∞—è –ª–∏–Ω–∏—è –ø–æ —Ü–µ–Ω—Ç—Ä—É –¥–æ—Ä–æ–∂–∫–∏
            Box(
                modifier = Modifier
                    .align(Alignment.Center)
                    .fillMaxWidth()
                    .height(1.dp)
                    .background(Color.Red)
            )

            // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–æ—à–∞–¥—å
            val horseSize = 32.dp  // –†–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏ –ª–æ—à–∞–¥–∏
            val horseSizePx = with(density) { horseSize.toPx() }  // –†–∞–∑–º–µ—Ä –≤ –ø–∏–∫—Å–µ–ª—è—Ö
            val maxTravel = trackWidth - horseSizePx  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è

            // –ò–∫–æ–Ω–∫–∞ –ª–æ—à–∞–¥–∏ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
            Icon(
                painter = painterResource(id = UtilsR.drawable.horse),
                contentDescription = "Horse",
                modifier = Modifier
                    .size(horseSize)
                    .graphicsLayer {
                        translationX = animatedProgress * maxTravel  // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
                        translationY = bounceAnimation  // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –ø–æ–∫–∞—á–∏–≤–∞–Ω–∏–µ
                        rotationY = if (animatedProgress >= 1f) 180f else 0f  // –†–∞–∑–≤–æ—Ä–æ—Ç –Ω–∞ —Ñ–∏–Ω–∏—à–µ
                    }
                    .align(Alignment.CenterStart),
                // –¶–≤–µ—Ç –ª–æ—à–∞–¥–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–µ—Å—Ç–∞ –Ω–∞ —Ñ–∏–Ω–∏—à–µ
                tint = when {
                    finishPosition == 1 -> Color(0xFFFFD700) // –ó–æ–ª–æ—Ç–æ
                    finishPosition == 2 -> Color(0xFFC0C0C0) // –°–µ—Ä–µ–±—Ä–æ
                    finishPosition == 3 -> Color(0xFFCD7F32) // –ë—Ä–æ–Ω–∑–∞
                    else -> MaterialTheme.colorScheme.primary // –û–±—ã—á–Ω—ã–π —Ü–≤–µ—Ç
                }
            )
        }
    }
} 